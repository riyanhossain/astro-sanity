---
import {
  componentRegistry,
  type ComponentType,
} from "@/lib/component-registry";

const { data } = Astro.props;

// Type assertion for data._type
const componentType = data._type as ComponentType;

// Get the component from the registry
const DynamicComponent = componentRegistry[componentType];

// Check if component exists
const isVueComponent =
  DynamicComponent &&
  typeof DynamicComponent === "object" &&
  "render" in DynamicComponent;

// Use a variable to hold the component that will be rendered
let componentToRender;
---

{/* Use Fragment to avoid issues with TypeScript validating component names */}
<Fragment>
  {
    DynamicComponent && isVueComponent ? (
      <DynamicComponent client:load {...data} />
    ) : DynamicComponent ? (
      <DynamicComponent {...data} />
    ) : (
      <p>Unknown component type: {data._type}</p>
    )
  }
</Fragment>
